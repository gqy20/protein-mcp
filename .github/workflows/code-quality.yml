name: Code Quality Check and Format

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      run: pip install uv

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Debug environment
      run: |
        echo "🔍 Debug information:"
        echo "Python version: $(python --version)"
        echo "uv version: $(uv --version)"
        echo "Working directory: $(pwd)"
        echo "Available Python files:"
        find src/ tests/ -name "*.py" | head -10
        echo "---"

    - name: Run Black (code formatting)
      run: |
        echo "🔍 Checking code formatting with Black..."
        echo "📋 Black version: $(uv run black --version)"
        uv run black --check --diff src/ tests/

    - name: Run Ruff (linting and import sorting)
      run: |
        echo "🔍 Running Ruff for linting and import sorting..."
        uv run ruff check src/ tests/
        uv run ruff format --check src/ tests/

    - name: Run isort (import sorting)
      run: |
        echo "🔍 Checking import sorting with isort..."
        uv run isort --check-only --diff src/ tests/

    - name: Run mypy (type checking)
      run: |
        echo "🔍 Running mypy for type checking..."
        uv run mypy src/protein_mcp/

    - name: Auto-fix formatting issues
      if: failure()
      run: |
        echo "🔧 Attempting to auto-fix formatting issues..."
        uv run black src/ tests/
        uv run ruff format src/ tests/
        uv run isort src/ tests/

    - name: Show changes after auto-fix
      if: failure()
      run: |
        echo "📋 Changes after auto-fix:"
        git diff --color=always

    - name: Fail if formatting was needed
      if: failure()
      run: |
        echo "❌ Code formatting issues were found and auto-fixed."
        echo "Please review the changes above and commit them."
        exit 1

    - name: Run tests
      run: |
        echo "🧪 Running tests..."
        uv run pytest tests/ -v --cov=src/protein_mcp --cov-report=xml

    - name: Upload coverage to Codecov
      if: github.repository == 'your-org/protein-mcp'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # Comment on PR with formatting suggestions
  formatting-suggestions:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: code-quality

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      run: pip install uv

    - name: Install dependencies
      run: uv sync --dev

    - name: Auto-format code
      run: |
        uv run black src/ tests/
        uv run ruff format src/ tests/
        uv run isort src/ tests/

    - name: Create formatting diff
      id: create-diff
      run: |
        git diff --color=always > formatting_diff.txt
        if [ -s formatting_diff.txt ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Comment PR with formatting suggestions
      if: steps.create-diff.outputs.has_changes == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const diff = fs.readFileSync('formatting_diff.txt', 'utf8');

          const comment = `## 🎨 Code Formatting Suggestions

          The following formatting changes are recommended:

          \`\`\`diff
          ${diff}
          \`\`\`

          You can apply these changes automatically by running:
          \`\`\`bash
          pip install uv
          uv sync --dev
          uv run black src/ tests/
          uv run ruff format src/ tests/
          uv run isort src/ tests/
          \`\`\`

          ---
          🤖 _This comment was generated by the Code Quality workflow_`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });